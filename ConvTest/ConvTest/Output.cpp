
// File: DNA_modifier_types.h
#define eModifierMode_Realtime (1 << 0)
#define eModifierMode_Render (1 << 1)
#define MOD_SHRINKWRAP_NEAREST_SURFACE 0
#define MOD_SHRINKWRAP_PROJECT 1
#define MOD_SHRINKWRAP_NEAREST_VERTEX 2

// File: BKE_depsgraph.h
#define DAG_EVAL_VIEWPORT 0
#define DAG_EVAL_PREVIEW 1
#define DAG_EVAL_RENDER 2

// UNSOLVED REFERENCES: 
// 	CONSTRAINT_SPACE_WORLD
// 	CONSTRAINT_SPACE_POSE
// 	CONSTRAINT_SPACE_PARLOCAL
// 	CONSTRAINT_SPACE_LOCAL
// 	CONSTRAINT_TYPE_CAMERASOLVER
// 	CONSTRAINT_TYPE_FOLLOWTRACK
// 	CONSTRAINT_TYPE_OBJECTSOLVER
// 	CONSTRAINT_TYPE_LOCLIKE
// 	CONSTRAINT_TYPE_ROTLIKE
// 	CONSTRAINT_TYPE_SIZELIKE
// 	CONSTRAINT_TYPE_TRANSLIKE
// 	CONSTRAINT_TYPE_DISTLIMIT
// 	CONSTRAINT_TYPE_LOCLIMIT
// 	CONSTRAINT_TYPE_ROTLIMIT
// 	CONSTRAINT_TYPE_SIZELIMIT
// 	CONSTRAINT_TYPE_SAMEVOL
// 	CONSTRAINT_TYPE_TRANSFORM
// 	CONSTRAINT_TYPE_CLAMPTO
// 	CONSTRAINT_TYPE_DAMPTRACK
// 	CONSTRAINT_TYPE_KINEMATIC
// 	CONSTRAINT_TYPE_LOCKTRACK
// 	CONSTRAINT_TYPE_SPLINEIK
// 	CONSTRAINT_TYPE_STRETCHTO
// 	CONSTRAINT_TYPE_TRACKTO
// 	CONSTRAINT_TYPE_ACTION
// 	CONSTRAINT_TYPE_CHILDOF
// 	CONSTRAINT_TYPE_MINMAX
// 	CONSTRAINT_TYPE_FOLLOWPATH
// 	CONSTRAINT_TYPE_PIVOT
// 	CONSTRAINT_TYPE_RIGIDBODYJOINT
// 	CONSTRAINT_SPACE_WORLD
// 	CONSTRAINT_SPACE_POSE
// 	CONSTRAINT_SPACE_PARLOCAL
// 	CONSTRAINT_SPACE_LOCAL
// 	CONSTRAINT_SPACE_WORLD
// 	CONSTRAINT_SPACE_POSE
// 	CONSTRAINT_SPACE_PARLOCAL
// 	CONSTRAINT_SPACE_LOCAL
// 	CONSTRAINT_SPACE_WORLD
// 	CONSTRAINT_SPACE_LOCAL
// 	LIMITDIST_INSIDE
// 	LIMITDIST_OUTSIDE
// 	LIMITDIST_ONSURFACE
// 	CONSTRAINT_IK_TARGETAXIS
// 	CONSTRAINT_IK_COPYPOSE
// 	CONSTRAINT_IK_DISTANCE
// 	TRACK_X
// 	TRACK_Y
// 	TRACK_Z
// 	TRACK_nX
// 	TRACK_nY
// 	TRACK_nZ
// 	TRACK_X
// 	TRACK_Y
// 	TRACK_Z
// 	SAMEVOL_X
// 	SAMEVOL_Y
// 	SAMEVOL_Z
// 	TRACK_X
// 	TRACK_Y
// 	TRACK_Z
// 	TRACK_nX
// 	TRACK_nY
// 	TRACK_nZ
// 	TRACK_X
// 	TRACK_Y
// 	TRACK_Z
// 	TRACK_nX
// 	TRACK_nY
// 	TRACK_nZ
// 	TRACK_X
// 	TRACK_Y
// 	TRACK_Z
// 	TRACK_X
// 	TRACK_Y
// 	TRACK_Z
// 	TRACK_nX
// 	TRACK_nY
// 	TRACK_nZ
// 	TRACK_X
// 	TRACK_Y
// 	TRACK_Z
// 	VOLUME_XZ
// 	VOLUME_X
// 	VOLUME_Z
// 	NO_VOLUME
// 	PLANE_X
// 	PLANE_Z
// 	CONSTRAINT_RB_BALL
// 	CONSTRAINT_RB_HINGE
// 	CONSTRAINT_RB_CONETWIST
// 	CONSTRAINT_RB_GENERIC6DOF
// 	CLAMPTO_AUTO
// 	CLAMPTO_X
// 	CLAMPTO_Y
// 	CLAMPTO_Z
// 	TRANS_LOCATION
// 	TRANS_ROTATION
// 	TRANS_SCALE
// 	TRACK_X
// 	TRACK_Y
// 	TRACK_Z
// 	TRACK_nX
// 	TRACK_nY
// 	TRACK_nZ
// 	CONSTRAINT_SPLINEIK_XZS_NONE
// 	CONSTRAINT_SPLINEIK_XZS_ORIGINAL
// 	CONSTRAINT_SPLINEIK_XZS_VOLUMETRIC
// 	PIVOTCON_AXIS_NONE
// 	PIVOTCON_AXIS_X_NEG
// 	PIVOTCON_AXIS_Y_NEG
// 	PIVOTCON_AXIS_Z_NEG
// 	PIVOTCON_AXIS_X
// 	PIVOTCON_AXIS_Y
// 	PIVOTCON_AXIS_Z
// 	FOLLOWTRACK_FRAME_STRETCH
// 	FOLLOWTRACK_FRAME_FIT
// 	FOLLOWTRACK_FRAME_CROP
enum space_items
{
	WORLD=CONSTRAINT_SPACE_WORLD,
	POSE=CONSTRAINT_SPACE_POSE,
	LOCAL_WITH_PARENT=CONSTRAINT_SPACE_PARLOCAL,
	LOCAL=CONSTRAINT_SPACE_LOCAL
};

enum mesh_type_items
{
	PREVIEW=eModifierMode_Realtime,
	RENDER=eModifierMode_Render
};

enum dupli_eval_mode_items
{
	VIEWPORT=DAG_EVAL_VIEWPORT,
	PREVIEW=DAG_EVAL_PREVIEW,
	RENDER=DAG_EVAL_RENDER
};

enum mesh_dm_info_items
{
	SOURCE=0,
	DEFORM=1,
	FINAL=2
};

enum constraint_type_items
{
	CAMERA_SOLVER=CONSTRAINT_TYPE_CAMERASOLVER,
	FOLLOW_TRACK=CONSTRAINT_TYPE_FOLLOWTRACK,
	OBJECT_SOLVER=CONSTRAINT_TYPE_OBJECTSOLVER,
	COPY_LOCATION=CONSTRAINT_TYPE_LOCLIKE,
	COPY_ROTATION=CONSTRAINT_TYPE_ROTLIKE,
	COPY_SCALE=CONSTRAINT_TYPE_SIZELIKE,
	COPY_TRANSFORMS=CONSTRAINT_TYPE_TRANSLIKE,
	LIMIT_DISTANCE=CONSTRAINT_TYPE_DISTLIMIT,
	LIMIT_LOCATION=CONSTRAINT_TYPE_LOCLIMIT,
	LIMIT_ROTATION=CONSTRAINT_TYPE_ROTLIMIT,
	LIMIT_SCALE=CONSTRAINT_TYPE_SIZELIMIT,
	MAINTAIN_VOLUME=CONSTRAINT_TYPE_SAMEVOL,
	TRANSFORM=CONSTRAINT_TYPE_TRANSFORM,
	CLAMP_TO=CONSTRAINT_TYPE_CLAMPTO,
	DAMPED_TRACK=CONSTRAINT_TYPE_DAMPTRACK,
	IK=CONSTRAINT_TYPE_KINEMATIC,
	LOCKED_TRACK=CONSTRAINT_TYPE_LOCKTRACK,
	SPLINE_IK=CONSTRAINT_TYPE_SPLINEIK,
	STRETCH_TO=CONSTRAINT_TYPE_STRETCHTO,
	TRACK_TO=CONSTRAINT_TYPE_TRACKTO,
	ACTION=CONSTRAINT_TYPE_ACTION,
	CHILD_OF=CONSTRAINT_TYPE_CHILDOF,
	FLOOR=CONSTRAINT_TYPE_MINMAX,
	FOLLOW_PATH=CONSTRAINT_TYPE_FOLLOWPATH,
	PIVOT=CONSTRAINT_TYPE_PIVOT,
	RIGID_BODY_JOINT=CONSTRAINT_TYPE_RIGIDBODYJOINT
};

enum target_space_pchan_items
{
	WORLD=CONSTRAINT_SPACE_WORLD,
	POSE=CONSTRAINT_SPACE_POSE,
	LOCAL_WITH_PARENT=CONSTRAINT_SPACE_PARLOCAL,
	LOCAL=CONSTRAINT_SPACE_LOCAL
};

enum owner_space_pchan_items
{
	WORLD=CONSTRAINT_SPACE_WORLD,
	POSE=CONSTRAINT_SPACE_POSE,
	LOCAL_WITH_PARENT=CONSTRAINT_SPACE_PARLOCAL,
	LOCAL=CONSTRAINT_SPACE_LOCAL
};

enum space_object_items
{
	WORLD=CONSTRAINT_SPACE_WORLD,
	LOCAL=CONSTRAINT_SPACE_LOCAL
};

enum constraint_distance_items
{
	LIMITDIST_INSIDE=LIMITDIST_INSIDE,
	LIMITDIST_OUTSIDE=LIMITDIST_OUTSIDE,
	LIMITDIST_ONSURFACE=LIMITDIST_ONSURFACE
};

enum constraint_ik_axisref_items
{
	BONE=0,
	TARGET=CONSTRAINT_IK_TARGETAXIS
};

enum constraint_ik_type_items
{
	COPY_POSE=CONSTRAINT_IK_COPYPOSE,
	DISTANCE=CONSTRAINT_IK_DISTANCE
};

enum track_items
{
	TRACK_X=TRACK_X,
	TRACK_Y=TRACK_Y,
	TRACK_Z=TRACK_Z,
	TRACK_NEGATIVE_X=TRACK_nX,
	TRACK_NEGATIVE_Y=TRACK_nY,
	TRACK_NEGATIVE_Z=TRACK_nZ
};

enum up_items
{
	UP_X=TRACK_X,
	UP_Y=TRACK_Y,
	UP_Z=TRACK_Z
};

enum volume_items
{
	SAMEVOL_X=SAMEVOL_X,
	SAMEVOL_Y=SAMEVOL_Y,
	SAMEVOL_Z=SAMEVOL_Z
};

enum minmax_items
{
	FLOOR_X=TRACK_X,
	FLOOR_Y=TRACK_Y,
	FLOOR_Z=TRACK_Z,
	FLOOR_NEGATIVE_X=TRACK_nX,
	FLOOR_NEGATIVE_Y=TRACK_nY,
	FLOOR_NEGATIVE_Z=TRACK_nZ
};

enum transform_channel_items
{
	LOCATION_X=20,
	LOCATION_Y=21,
	LOCATION_Z=22,
	ROTATION_X=00,
	ROTATION_Y=01,
	ROTATION_Z=02,
	SCALE_X=10,
	SCALE_Y=11,
	SCALE_Z=12
};

enum locktrack_items
{
	TRACK_X=TRACK_X,
	TRACK_Y=TRACK_Y,
	TRACK_Z=TRACK_Z,
	TRACK_NEGATIVE_X=TRACK_nX,
	TRACK_NEGATIVE_Y=TRACK_nY,
	TRACK_NEGATIVE_Z=TRACK_nZ
};

enum lock_items
{
	LOCK_X=TRACK_X,
	LOCK_Y=TRACK_Y,
	LOCK_Z=TRACK_Z
};

enum forwardpath_items
{
	FORWARD_X=TRACK_X,
	FORWARD_Y=TRACK_Y,
	FORWARD_Z=TRACK_Z,
	TRACK_NEGATIVE_X=TRACK_nX,
	TRACK_NEGATIVE_Y=TRACK_nY,
	TRACK_NEGATIVE_Z=TRACK_nZ
};

enum pathup_items
{
	UP_X=TRACK_X,
	UP_Y=TRACK_Y,
	UP_Z=TRACK_Z
};

enum volume_items
{
	VOLUME_XZX=VOLUME_XZ,
	VOLUME_X=VOLUME_X,
	VOLUME_Z=VOLUME_Z,
	NO_VOLUME=NO_VOLUME
};

enum plane_items
{
	PLANE_X=PLANE_X,
	PLANE_Z=PLANE_Z
};

enum pivot_items
{
	BALL=CONSTRAINT_RB_BALL,
	HINGE=CONSTRAINT_RB_HINGE,
	CONE_TWIST=CONSTRAINT_RB_CONETWIST,
	GENERIC_6_DOF=CONSTRAINT_RB_GENERIC6DOF
};

enum clamp_items
{
	CLAMPTO_AUTO=CLAMPTO_AUTO,
	CLAMPTO_X=CLAMPTO_X,
	CLAMPTO_Y=CLAMPTO_Y,
	CLAMPTO_Z=CLAMPTO_Z
};

enum transform_items
{
	LOCATION=TRANS_LOCATION,
	ROTATION=TRANS_ROTATION,
	SCALE=TRANS_SCALE
};

enum axis_map_items
{
	X=0,
	Y=1,
	Z=2
};

enum type_items
{
	NEAREST_SURFACE=MOD_SHRINKWRAP_NEAREST_SURFACE,
	PROJECT=MOD_SHRINKWRAP_PROJECT,
	NEAREST_VERTEX=MOD_SHRINKWRAP_NEAREST_VERTEX
};

enum damptrack_items
{
	TRACK_X=TRACK_X,
	TRACK_Y=TRACK_Y,
	TRACK_Z=TRACK_Z,
	TRACK_NEGATIVE_X=TRACK_nX,
	TRACK_NEGATIVE_Y=TRACK_nY,
	TRACK_NEGATIVE_Z=TRACK_nZ
};

enum splineik_xz_scale_mode
{
	NONE=CONSTRAINT_SPLINEIK_XZS_NONE,
	BONE_ORIGINAL=CONSTRAINT_SPLINEIK_XZS_ORIGINAL,
	VOLUME_PRESERVE=CONSTRAINT_SPLINEIK_XZS_VOLUMETRIC
};

enum pivot_rotAxis_items
{
	ALWAYS_ACTIVE=PIVOTCON_AXIS_NONE,
	NX=PIVOTCON_AXIS_X_NEG,
	NY=PIVOTCON_AXIS_Y_NEG,
	NZ=PIVOTCON_AXIS_Z_NEG,
	X=PIVOTCON_AXIS_X,
	Y=PIVOTCON_AXIS_Y,
	Z=PIVOTCON_AXIS_Z
};

enum frame_method_items
{
	STRETCH=FOLLOWTRACK_FRAME_STRETCH,
	FIT=FOLLOWTRACK_FRAME_FIT,
	CROP=FOLLOWTRACK_FRAME_CROP
};



float convert_space(PoseBone pose_bone=NULL, float matrix[4][4]=NULL, space_items from_space=CONSTRAINT_SPACE_WORLD, space_items to_space=CONSTRAINT_SPACE_WORLD)
{
    // dummy
}

Mesh to_mesh(Scene scene, bool apply_modifiers, mesh_type_items settings, bool calc_tessface=true, bool calc_undeformed=false)
{
    // dummy
}

void dupli_list_create(Scene scene, dupli_eval_mode_items settings=0)
{
    // dummy
}

void dupli_list_clear()
{
    // dummy
}

Object find_armature()
{
    // dummy
}

ShapeKey shape_key_add(string name="Key", bool from_mix=true)
{
    // dummy
}

int ray_cast(float start[3], float end[3])
{
    // dummy
}

int closest_point_on_mesh(float point[3], float max_dist=1.844674352395373e+19)
{
    // dummy
}

bool is_visible(Scene scene)
{
    // dummy
}

bool is_modified(Scene scene, mesh_type_items settings)
{
    // dummy
}

bool is_deform_modified(Scene scene, mesh_type_items settings)
{
    // dummy
}

string dm_info(mesh_dm_info_items type)
{
    // dummy
}

bool update_from_editmode()
{
    // dummy
}

void layers_from_view(SpaceView3D view)
{
    // dummy
}

