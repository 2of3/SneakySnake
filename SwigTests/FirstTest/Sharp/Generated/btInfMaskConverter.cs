/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class btInfMaskConverter : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal btInfMaskConverter(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(btInfMaskConverter obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~btInfMaskConverter() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cppPINVOKE.delete_btInfMaskConverter(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public float mask {
    set {
      cppPINVOKE.btInfMaskConverter_mask_set(swigCPtr, value);
    } 
    get {
      float ret = cppPINVOKE.btInfMaskConverter_mask_get(swigCPtr);
      return ret;
    } 
  }

  public int intmask {
    set {
      cppPINVOKE.btInfMaskConverter_intmask_set(swigCPtr, value);
    } 
    get {
      int ret = cppPINVOKE.btInfMaskConverter_intmask_get(swigCPtr);
      return ret;
    } 
  }

  public btInfMaskConverter(int mask) : this(cppPINVOKE.new_btInfMaskConverter__SWIG_0(mask), true) {
  }

  public btInfMaskConverter() : this(cppPINVOKE.new_btInfMaskConverter__SWIG_1(), true) {
  }

}
